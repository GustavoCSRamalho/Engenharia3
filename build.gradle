/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Giuliano' at '05/08/17 23:48' with Gradle 2.6
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.6/userguide/tutorial_java_projects.html
 */


buildscript {
    ext {
        dl4j_version = "0.9.1"

    }
    repositories {
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        mavenCentral()
    }

}


// Apply the java plugin to add support for Java
//apply plugin: 'java' mexer denovo!
apply plugin: "application"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'

    // https://mvnrepository.com/artifact/com.github.pengrad/java-telegram-bot-api
	compile group: 'com.github.pengrad', name: 'java-telegram-bot-api', version: '2.3.1'
    
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
	compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.4.1'
    
    // https://mvnrepository.com/artifact/com.squareup.okio/okio
	compile group: 'com.squareup.okio', name: 'okio', version: '1.10.0'
    
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.7'

	compile group: 'org.deeplearning4j', name: 'deeplearning4j-ui-model', version: '0.9.1'

	// https://mvnrepository.com/artifact/org.deeplearning4j/deeplearning4j-nlp
	compile group: 'org.deeplearning4j', name: 'deeplearning4j-nlp', version: '0.8.0'

	// https://mvnrepository.com/artifact/org.nd4j/nd4j-native-platform
	testCompile group: 'org.nd4j', name: 'nd4j-native-platform', version: '0.9.1'
	compile "org.slf4j:slf4j-simple:1.7.25"
	compile "org.slf4j:slf4j-api:1.7.25"
    
    
    testCompile 'junit:junit:4.12'
}

sourceSets {
	main {
		/*
        Kotlin examples do not use java sources, so let's exclude them all
         */
		java {
			srcDir "src/main/java"

		}
	}
}



task MLPMnistSingleLayerExample(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	main = "org.deeplearning4j.examples.feedforward.mnist.MLPMnistSingleLayerExample"
}

task MLPMnistTwoLayerExample(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	main = "org.deeplearning4j.examples.feedforward.mnist.MLPMnistTwoLayerExample"
}
